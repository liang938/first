C251 COMPILER V5.60.0,  sensor                                                             16/04/24  16:11:44  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE sensor
OBJECT MODULE PLACED IN .\Out_File\sensor.obj
COMPILER INVOKED BY: D:\keil5\keil5_MDK\keil5_MDK_32\C251\BIN\C251.EXE ..\USER\src\sensor.c XSMALL INTR2 WARNINGLEVEL(3)
                    - BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;
                    -..\USER\inc;..\USER\src) DEBUG PRINT(.\Out_File\sensor.lst) OBJECT(.\Out_File\sensor.obj) 

stmt  level    source

    1          #include "headfile.h"
    2          
    3          int ADC_MIN = 0;                                                                                        //电感采集最小值
    4          int ADC_MAX = 100;                                                                              //电感采集最大值
    5          int READ_MAX = 100;                                                                             //电感归一化后最大值(不需要修改)
    6          int temp;                                                                                                                       //中值滤波临时变量
    7          int ad[4][3];                                                                                                   //二维数组，存储四路adc连续采集三次的电感值
    8          int sensor[4];                                                                                          //滤波后的当前四路电感值
    9          int cross_num=0;                                                                                        //防止十字误判
   10          int cross_flag=0;                                                                                       //十字标志位
   11          int time_count=0;                                                                                       //时间积分变量
   12          int servos_flag=0;                                                                              //判断是否为环岛
   13          int servos_middle = 845;                                                        //舵机中间位置
   14          int leftspeed,rightspeed;                                                       //左右电机差速度
   15          float l,lm,rm,r;                                                                                        //左、左中、右中、右四路电感
   16          float speed_add=0;                                                                              //直道加速
   17          float speed_err=0;                                                                              //转弯速度增益
   18          float speed_low=0;                                                                              //转弯差速程度,越小差速越大
   19          float sensor_err;                                                                                       //电感偏差值
   20          float servos_err;                                                                                       //舵机偏差值
   21          bit forward_flag=0;
   22          extern float Speed;                                                                             //预设速度
   23          extern bit Stop_flag;                                                                   //冲出赛道标志
   24          extern bit Barrier_flag;                                                        //避障标志位
   25          extern int mode;
   26          extern int element_num;                                                         //经过元素的数量
   27          extern PID_InitTypeDef PID_Servos;              //舵机结构体变量
   28          
   29          void ADC_Read()                                                                                                                         //电感采集
   30          {
   31   1              int i;
   32   1              for(i=0;i<3;i++)                                                                                                                //连续采集3次
   33   1              {
   34   2                      ad[0][i] = adc_once(ADC_P00, ADC_8BIT);         //一路电感
   35   2                      ad[1][i] = adc_once(ADC_P05, ADC_8BIT);         //二路电感
   36   2                      ad[2][i] = adc_once(ADC_P06, ADC_8BIT);         //三路电感
   37   2                      ad[3][i] = adc_once(ADC_P16, ADC_8BIT);         //四路电感
   38   2              }
   39   1              for(i=0;i<4;i++)                                                                                                                //中值滤波,取连续采集三次电感值的中间值 
   40   1              {
   41   2                      if(ad[i][0]>ad[i][1])
   42   2                      {
   43   3                              temp = ad[i][0];
   44   3                              ad[i][0] = ad[i][1];
   45   3                              ad[i][1] = temp;
   46   3                      }
   47   2                      if(ad[i][1]>ad[i][2])
   48   2                      {
   49   3                              temp = ad[i][0];
   50   3                              ad[i][0] = ad[i][1];
   51   3                              ad[i][1] = temp;
   52   3                      }
   53   2                      if(ad[i][0]>ad[i][1])
   54   2                      {
   55   3                              temp = ad[i][0];
   56   3                              ad[i][0] = ad[i][1];
   57   3                              ad[i][1] = temp;
C251 COMPILER V5.60.0,  sensor                                                             16/04/24  16:11:44  PAGE 2   

   58   3                      }
   59   2                      ad[i][1] = (ad[i][1]>ADC_MAX)?ADC_MAX:ad[i][1];                                 //对电感值进行限幅处理
   60   2                      ad[i][1] = 100*(ad[i][1]-ADC_MIN)/(ADC_MAX-ADC_MIN);            //归一化,将电感值限制在0~100之间
   61   2              }
   62   1              l = ad[0][1];                                   //左电感
   63   1              lm = ad[1][1];                          //左中电感
   64   1              rm = ad[2][1];                          //右中电感
   65   1              r = ad[3][1];                                   //右电感
   66   1              if((l+lm+rm+r)<20)
   67   1                      Stop_flag=1;
   68   1              if(mode==0)                                                             //1.8
   69   1                      circle_judge0();
   70   1              else if(mode==1)                                        //2.4                                   
   71   1                      circle_judge1();
   72   1      }
   73          
   74          
   75          //*******************************************************************************************************
             -********************************//
   76          
   77          
   78          //位置偏差计算
   79          void Pos_Deviation0()   
   80          {
   81   1              if(servos_flag!=0)                                                                                                                                                                                      //如果是环岛
   82   1                      circle_move0();                                                                                                                                                                                         //环岛寻迹
   83   1              else                                                                                                                                                                                                                                            //如果是正常路段
   84   1                      sensor_err = 100*(1.2*(l-r)+(lm-rm))/((l+r)+0.5*(lm+rm));                       //差比和算法,偏差值小于零向右转，大于零向左
             -转 
   85   1              if(-30<sensor_err&&sensor_err<30)                                                                                                                               //在直道上
   86   1              {
   87   2                      forward_flag=0;
   88   2                      speed_add = 0;                                                                                                                                                                                          //直道加速
   89   2                      speed_err       =       400;                                    //直道转弯速度增益
   90   2                      speed_low = 300;                                        //转弯差速程度,越小差速越大
   91   2                      PID_Servos.KP = 0.5;                                                                                                                                                                    
   92   2                      PID_Servos.KI = 0;
   93   2                      PID_Servos.KD = 5;
   94   2              }
   95   1              else
   96   1              {
   97   2                      forward_flag=1;
   98   2                      speed_add = 0;                                                                                                                                                                                          //弯道取消加速
   99   2                      speed_err       =       400;                                    //直道转弯速度增益
  100   2                      speed_low = -200;                                       //转弯差速程度,越小差速越大
  101   2                      PID_Servos.KP = 1;
  102   2                      PID_Servos.KI = 0;
  103   2                      PID_Servos.KD = 20;
  104   2              }
  105   1      }
  106          
  107          void Servos_Control0()                                                                                                                                                                                          //车身姿态调整
  108          {
  109   1              if(servos_flag!=0)                                                              //如果在环岛中
  110   1                      time_count+=1;                                                                  //开始时间积分
  111   1              //printf("%.0f,%.0f,%.0f,%.0f,%.0f,%d,%d\n",l,lm,rm,r,sensor_err,servos_flag,element_num);
  112   1      //舵机控制
  113   1              PID_Calc_Positional(&PID_Servos, 0, sensor_err);                                                                                                                        //舵机输出值计算
  114   1              pwm_duty(PWMB_CH1_P74,servos_middle-(int)PID_Servos.Total_Out);                                                         //舵机控制  
  115   1      
  116   1      //电机差速
  117   1              if(sensor_err<0)
  118   1              {
  119   2                      leftspeed = (int)((Speed+speed_add)*(1+PID_Servos.Total_Out/speed_err));
  120   2                      rightspeed = (int)((Speed+speed_add)*(1-PID_Servos.Total_Out/(speed_err+speed_low)));
  121   2              }
C251 COMPILER V5.60.0,  sensor                                                             16/04/24  16:11:44  PAGE 3   

  122   1              else
  123   1              {
  124   2                      rightspeed = (int)((Speed+speed_add)*(1-PID_Servos.Total_Out/speed_err));
  125   2                      leftspeed = (int)((Speed+speed_add)*(1+PID_Servos.Total_Out/(speed_err+speed_low)));
  126   2              }
  127   1              Speedcontrol(leftspeed, rightspeed);                                                                                                                    //调整当前速度
  128   1      }
  129          
  130          
  131          //*******************************************************************************************************
             -********************************//
  132          
  133          
  134          
  135          //位置偏差计算
  136          void Pos_Deviation1()   
  137          {
  138   1              if(servos_flag!=0)                                                                                                                                                                                      //如果是环岛
  139   1                      circle_move1();                                                                                                                                                                                         //环岛寻迹
  140   1              else                                                                                                                                                                                                                                            //如果是正常路段
  141   1                      sensor_err = 100*(1.4*(l-r)+1.2*(lm-rm))/((l+r)+0.5*(lm+rm));   //差比和算法,偏差值小于零向右转，大于零向
             -左转 
  142   1              if(-40<sensor_err&&sensor_err<40)
  143   1              {
  144   2                      forward_flag=0;
  145   2                      speed_add = 0;                                          //直道加速
  146   2                      speed_err       =       400;                                    //直道转弯速度增益
  147   2                      speed_low = 300;                                        //转弯差速程度,越小差速越大
  148   2                      PID_Servos.KP = 0.4;
  149   2                      PID_Servos.KI = 0;
  150   2                      PID_Servos.KD = 4.5;
  151   2              }
  152   1              else
  153   1              {
  154   2                      forward_flag=1;
  155   2                      speed_add = 0;                                          //直道加速
  156   2                      speed_err       =       500;                                    //弯道转弯速度增益      
  157   2                      speed_low = -400;                                       //转弯差速程度,越小差速越大
  158   2                      PID_Servos.KP = 1;
  159   2                      PID_Servos.KI = 0;
  160   2                      PID_Servos.KD = 30;
  161   2              }
  162   1      }
  163          
  164          void Servos_Control1()                                                                                                                                                                                          //车身姿态调整
  165          {
  166   1      
  167   1              if(servos_flag!=0)                                                              //如果在环岛中
  168   1                      time_count+=1;                                                                  //开始时间积分
  169   1              //printf("%.0f,%.0f,%.0f,%.0f,%.0f,%d\n",l,lm,rm,r,sensor_err,servos_flag);
  170   1      //舵机控制
  171   1              PID_Calc_Positional(&PID_Servos, 0, sensor_err);                                                                        //舵机输出值计算
  172   1              pwm_duty(PWMB_CH1_P74,servos_middle-(int)PID_Servos.Total_Out);         //舵机控制  
  173   1      
  174   1      //电机差速
  175   1              if(sensor_err<0)
  176   1              {
  177   2                      leftspeed = (int)((Speed+speed_add)*(1+PID_Servos.Total_Out/speed_err));
  178   2                      rightspeed = (int)((Speed+speed_add)*(1-PID_Servos.Total_Out/(speed_err+speed_low)));
  179   2              }
  180   1              else
  181   1              {
  182   2                      rightspeed = (int)((Speed+speed_add)*(1-PID_Servos.Total_Out/speed_err));
  183   2                      leftspeed = (int)((Speed+speed_add)*(1+PID_Servos.Total_Out/(speed_err+speed_low)));
  184   2              }
  185   1              Speedcontrol(leftspeed, rightspeed);                                                                                                                    //调整当前速度
C251 COMPILER V5.60.0,  sensor                                                             16/04/24  16:11:44  PAGE 4   

  186   1      }
  187          
  188          
  189          //*******************************************************************************************************
             -********************************//
  190          
  191          
  192          
  193          //位置偏差计算
  194          void Pos_Deviation2()   
  195          {
  196   1              if(servos_flag!=0)                                                                                                                                                                                      //如果是环岛
  197   1                      circle_move2();                                                                                                                                                                                         //环岛寻迹
  198   1              else                                                                                                                                                                                                                                            //如果是正常路段
  199   1                      sensor_err = 100*(1.5*(l-r)+1.3*(lm-rm))/((l+r)+0.5*(lm+rm));   //差比和算法,偏差值小于零向右转，大于零向
             -左转 
  200   1              if(-50<sensor_err&&sensor_err<50)
  201   1              {
  202   2                      forward_flag=0;
  203   2                      speed_add = 0;                                          //直道加速
  204   2                      speed_err       =       400;                                    //直道转弯速度增益
  205   2                      speed_low = 300;                                        //转弯差速程度,越小差速越大
  206   2                      PID_Servos.KP = 0.4;
  207   2                      PID_Servos.KI = 0;
  208   2                      PID_Servos.KD = 4.5;
  209   2              }
  210   1              else
  211   1              {
  212   2                      forward_flag=1;
  213   2                      speed_add = (servos_flag==0)?-10:0;                                             //直道加速
  214   2                      speed_err       =       800;                                                                                                                    //弯道转弯速度增益      
  215   2                      speed_low = -700;                                                                                                                       //转弯差速程度,越小差速越大
  216   2                      PID_Servos.KP = 1;
  217   2                      PID_Servos.KI = 0;
  218   2                      PID_Servos.KD =30;
  219   2              }
  220   1      }
  221          
  222          void Servos_Control2()                                                                                                                                                                                          //车身姿态调整
  223          {
  224   1      
  225   1              if(servos_flag!=0)                                                              //如果在环岛中
  226   1                      time_count+=1;                                                                  //开始时间积分
  227   1      
  228   1              printf("%.0f,%.0f,%.0f,%.0f,%.0f,%d\n",l,lm,rm,r,sensor_err,servos_flag);
  229   1      //舵机控制
  230   1              PID_Calc_Positional(&PID_Servos, 0, sensor_err);                                                                        //舵机输出值计算
  231   1              pwm_duty(PWMB_CH1_P74,servos_middle-(int)PID_Servos.Total_Out);         //舵机控制  
  232   1      
  233   1      //电机差速
  234   1              if(sensor_err<0)
  235   1              {
  236   2                      leftspeed = (int)((Speed+speed_add)*(1+PID_Servos.Total_Out/speed_err));
  237   2                      rightspeed = (int)((Speed+speed_add)*(1-PID_Servos.Total_Out/(speed_err+speed_low)));
  238   2                      //rightspeed = (int)(Speed+speed_add);
  239   2              }
  240   1              else
  241   1              {
  242   2                      rightspeed = (int)((Speed+speed_add)*(1-PID_Servos.Total_Out/speed_err));
  243   2                      leftspeed = (int)((Speed+speed_add)*(1+PID_Servos.Total_Out/(speed_err+speed_low)));
  244   2                      //leftspeed = (int)(Speed+speed_add);
  245   2              }
  246   1              Speedcontrol(leftspeed, rightspeed);                                                                                                                    //调整当前速度
  247   1      }
  248          
  249          
C251 COMPILER V5.60.0,  sensor                                                             16/04/24  16:11:44  PAGE 5   

  250          
  251          
  252          
  253          
  254          
  255          
  256          
  257          
  258          
  259          
  260          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      2061     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        90     ------
  bit size             =         1     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       101     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
