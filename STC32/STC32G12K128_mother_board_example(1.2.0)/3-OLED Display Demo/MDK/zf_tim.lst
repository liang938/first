C251 COMPILER V5.60.0,  zf_tim                                                             15/11/23  21:36:20  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE zf_tim
OBJECT MODULE PLACED IN .\zf_tim.obj
COMPILER INVOKED BY: D:\keil5\keil5_MDK\keil5_MDK_32\C251\BIN\C251.EXE ..\..\Libraries\seekfree_libraries\zf_tim.c INTR2
                    - DEBUG PRINT(.\zf_tim.lst) OBJECT(.\zf_tim.obj) 

stmt  level    source

    1          /********************************************************************************************************
             -*************
    2           * COPYRIGHT NOTICE
    3           * Copyright (c) 2020,逐飞科技
    4           * All rights reserved.
    5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
    6           *
    7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
    8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
    9           *
   10           * @file                ctime
   11           * @company                     成都逐飞科技有限公司
   12           * @author              逐飞科技(QQ790875685)
   13           * @version             查看doc内version文件 版本说明
   14           * @Software            MDK FOR C251 V5.60
   15           * @Target core         STC32G12K128
   16           * @Taobao              https://seekfree.taobao.com/
   17           * @date                2020-4-14
   18           ********************************************************************************************************
             -************/
   19          
   20          
   21          #include "zf_tim.h"
*** ERROR C318 IN LINE 22 OF ..\..\Libraries\seekfree_libraries\zf_tim.h: can't open file 'common.h'
*** ERROR C42 IN LINE 55 OF ..\..\Libraries\seekfree_libraries\zf_tim.h: 'ctimer_count_read': not in formal parameter li
             -st
*** ERROR C25 IN LINE 57 OF ..\..\Libraries\seekfree_libraries\zf_tim.h: syntax error near 'time_ms'
*** ERROR C42 IN LINE 57 OF ..\..\Libraries\seekfree_libraries\zf_tim.h: 'pit_timer_ms': not in formal parameter list
   22          #include "board.h"
*** ERROR C318 IN LINE 22 OF ..\..\Libraries\seekfree_libraries\zf_tim.c: can't open file 'board.h'
   23          
   24          
   25          
   26          //-------------------------------------------------------------------------------------------------------
             -------------
   27          //  @brief      定时器初始化作为外部计数
   28          //  @param      tim_n           选择模块
   29          //  @return     void
   30          //  @since      v1.0
   31          //  Sample usage:               ctimer_count_init(CTIM0_P34);           //初始化定时器0，外部输入为P3.4引脚
   32          //  @note                       串口1使用定时器1作为波特率发生器，
   33          //                                                              串口2使用定时器2作为波特率发生器，
   34          //                                                              串口3使用定时器3作为波特率发生器，
   35          //                                                              串口4使用定时器4作为波特率发生器，
   36          //                              STC16F仅有定时器0-定时器4，这5个定时器。
   37          //                                                              编码器采集数据也需要定时器作为外部计数。
   38          //-------------------------------------------------------------------------------------------------------
             -------------
   39          void ctimer_count_init(CTIMN_enum tim_n)
   40          {
*** ERROR C42 IN LINE 40 OF ..\..\Libraries\seekfree_libraries\zf_tim.c: 'ctimer_count_init': not in formal parameter li
             -st
*** ERROR C25 IN LINE 40 OF ..\..\Libraries\seekfree_libraries\zf_tim.c: syntax error near '{'
   41          
   42                  switch(tim_n)
   43                  {
   44                          case CTIM0_P34:
   45                          {
C251 COMPILER V5.60.0,  zf_tim                                                             15/11/23  21:36:20  PAGE 2   

   46                                  TL0 = 0; 
   47                                  TH0 = 0; 
   48                                  TMOD |= 0x04; //外部计数模式
   49                                  TR0 = 1; //启动定时器
   50                                  break;
   51                          }
   52                          
   53                          case CTIM1_P35:
   54                          {
   55                                  TL1 = 0x00;
   56                                  TH1 = 0x00;
   57                                  TMOD |= 0x40; // 外部计数模式
   58                                  TR1 = 1; // 启动定时器
   59                                  break;
   60                          }
   61                          
   62                          case CTIM2_P12:
   63                          {
   64                                  T2L = 0x00;
   65                                  T2H = 0x00;
   66                                  AUXR |= 0x18; // 设置外部计数模式并启动定时器
   67                                  break;
   68                          }
   69                          
   70                          case CTIM3_P04:
   71                          {
   72                                  T3L = 0; 
   73                                  T3H = 0;
   74                                  T4T3M |= 0x0c; // 设置外部计数模式并启动定时器
   75                                  break;
   76                          }
   77                          
   78                          case CTIM4_P06:
   79                          {
   80                                  T4L = 0;
   81                                  T4H = 0;
   82                                  T4T3M |= 0xc0; // 设置外部计数模式并启动定时器
   83                                  break;
   84                          }
   85                  
   86                  }       
   87          } 
   88          
   89          //-------------------------------------------------------------------------------------------------------
             -------------
   90          //  @brief      获取计数数值
   91          //  @param      countch     计数通道号及引脚
   92          //  @return     uint32      返回计数值
   93          //  Sample usage:           num = ctimer_count_read(CTIM0_P34);     
   94          //-------------------------------------------------------------------------------------------------------
             -------------
   95          uint16 ctimer_count_read(CTIMN_enum tim_n)
   96          {
   97                  uint16 dat = 0;
   98                  
   99                  switch(tim_n)
  100                  {
  101                          case CTIM0_P34:
  102                          {
  103                                  dat = (uint16)TH0 << 8;
  104                                  dat = ((uint8)TL0) | dat;
  105                                  break;
  106                          }
  107                          case CTIM1_P35:
  108                          {
  109                                  dat = (uint16)TH1 << 8;
C251 COMPILER V5.60.0,  zf_tim                                                             15/11/23  21:36:20  PAGE 3   

  110                                  dat = ((uint8)TL1) | dat;
  111                                  break;
  112                          }
  113                          case CTIM2_P12:
  114                          {
  115                                  dat = (uint16)T2H << 8;
  116                                  dat = ((uint8)T2L) | dat;
  117                                  break;
  118                          }
  119                          case CTIM3_P04:
  120                          {
  121                                  dat = (uint16)T3H << 8;
  122                                  dat = ((uint8)T3L) | dat;       
  123                                  break;
  124                          }
  125                          case CTIM4_P06:
  126                          {
  127                                  dat = (uint16)T4H << 8;
  128                                  dat = ((uint8)T4L) | dat;
  129                                  break;
  130                          }
  131                          
  132                  }
  133                  return dat;
  134          }
  135          
  136          
  137          //-------------------------------------------------------------------------------------------------------
             -------------
  138          //  @brief      清除计数数值
  139          //  @param      countch     计数通道号及引脚
  140          //  @return     void      
  141          //  Sample usage:           ctimer_count_clean(CTIM0_P34);     
  142          //-------------------------------------------------------------------------------------------------------
             -------------
  143          void ctimer_count_clean(CTIMN_enum tim_n)
  144          {       
  145                  switch(tim_n)
  146                  {
  147                          case CTIM0_P34:
  148                          {
  149                                  TR0 = 0;
  150                                  TH0 = 0;
  151                                  TL0 = 0;
  152                                  TR0 = 1;
  153                                  break;
  154                          }
  155                          case CTIM1_P35:
  156                          {
  157                                  TR1 = 0;
  158                                  TH1 = 0;
  159                                  TL1 = 0;
  160                                  TR1 = 1;
  161                                  break;
  162                          }
  163                          case CTIM2_P12:
  164                          {
  165                                  AUXR &= ~(1<<4);
  166                                  T2H = 0;
  167                                  T2L = 0;
  168                                  AUXR |= 1<<4;
  169                                  break;
  170                          }
  171                          case CTIM3_P04:
  172                          {
  173                                  T4T3M &= ~(1<<3);
C251 COMPILER V5.60.0,  zf_tim                                                             15/11/23  21:36:20  PAGE 4   

  174                                  T3H = 0;
  175                                  T3L = 0;
  176                                  T4T3M |= (1<<3);
  177                                  break;
  178                          }
  179                          case CTIM4_P06:
  180                          {
  181                                  T4T3M &= ~(1<<7);
  182                                  T4H = 0;
  183                                  T4L = 0;
  184                                  T4T3M |= (1<<7);
  185                                  break;
  186                          }
  187                  }
  188          }
  189          
  190          //-------------------------------------------------------------------------------------------------------
             -------------
  191          //  @brief      定时器周期中断
  192          //  @param      tim_n      定时器通道号
  193          //  @param      time_ms    时间(ms)
  194          //  @return     void      
  195          //  Sample usage:          pit_timer_ms(TIM_0, 10)
  196          //                                                 使用定时器0做周期中断，时间10ms一次。
  197          //-------------------------------------------------------------------------------------------------------
             -------------
  198          void pit_timer_ms(TIMN_enum tim_n,uint16 time_ms)
  199          {
  200                  uint16 temp;
  201                  temp = (uint16)65536 - (uint16)(sys_clk / (12 * (1000 / time_ms)));
  202                  
  203                  if(TIM_0 == tim_n)
  204                  {
  205                          TMOD |= 0x00;   // 模式 0
  206                          TL0 = temp;     
  207                          TH0 = temp >> 8;
  208                          TR0 = 1;                // 启动定时器
  209                          ET0 = 1;                // 使能定时器中断
  210                  }
  211                  else if(TIM_1 == tim_n)
  212                  {
  213                          TMOD |= 0x00; // 模式 0
  214                          TL1 = temp;     
  215                          TH1 = temp >> 8;
  216                          TR1 = 1; // 启动定时器
  217                          ET1 = 1; // 使能定时器中断
  218                  }
  219                  else if(TIM_2 == tim_n)
  220                  {
  221                          T2L = temp;     
  222                          T2H = temp >> 8;
  223                          AUXR |= 0x10; // 启动定时器
  224                          IE2 |= 0x04; // 使能定时器中断
  225                  }
  226                  else if(TIM_3 == tim_n)
  227                  {
  228                          T3L = temp;     
  229                          T3H = temp >> 8;
  230                          T4T3M |= 0x08; // 启动定时器
  231                          IE2 |= 0x20; // 使能定时器中断
  232                  }
  233                  else if(TIM_4 == tim_n)
  234                  {
  235                          T4L = temp;     
  236                          T4H = temp >> 8;
  237                          T4T3M |= 0x80; // 启动定时器
C251 COMPILER V5.60.0,  zf_tim                                                             15/11/23  21:36:20  PAGE 5   

  238                          IE2 |= 0x40; // 使能定时器中断
  239                  }
  240          }
  241          
*** ERROR C7 IN LINE 241 OF ..\..\Libraries\seekfree_libraries\zf_tim.c: compilation aborted

C251 COMPILATION COMPLETE.  0 WARNING(S),  8 ERROR(S)
